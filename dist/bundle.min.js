!function(t){var n={};function i(e){if(n[e])return n[e].exports;var o=n[e]={i:e,l:!1,exports:{}};return t[e].call(o.exports,o,o.exports,i),o.l=!0,o.exports}i.m=t,i.c=n,i.d=function(t,n,e){i.o(t,n)||Object.defineProperty(t,n,{enumerable:!0,get:e})},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(t,n){if(1&n&&(t=i(t)),8&n)return t;if(4&n&&"object"==typeof t&&t&&t.__esModule)return t;var e=Object.create(null);if(i.r(e),Object.defineProperty(e,"default",{enumerable:!0,value:t}),2&n&&"string"!=typeof t)for(var o in t)i.d(e,o,function(n){return t[n]}.bind(null,o));return e},i.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(n,"a",n),n},i.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},i.p="",i(i.s=0)}([function(t,n,i){"use strict";i.r(n);var e={windowWidth:window.innerWidth,windowHeight:window.innerHeight,pixelRatio:window.devicePixelRatio,rain:[],rainCount:1500,rainPath:4,gravity:.15,lineWidth:1.1,lineCap:"butt",PI:Math.PI,TWO_PI:2*Math.PI},o=function(){function t(){this.canvasElement=document.createElement("canvas"),this.ctx=this.canvasElement.getContext("2d"),this.canvasElement.width=e.windowWidth,this.canvasElement.height=e.windowHeight,this.ctx.scale(e.pixelRatio,e.pixelRatio),this.ctx.lineWidth=e.lineWidth,this.ctx.lineCap=e.lineCap}return t.getInstance=function(){return t._instance||(t._instance=new t),t._instance},Object.defineProperty(t.prototype,"canvasElement",{get:function(){return this._canvasElement},set:function(t){this._canvasElement!=t&&(this._canvasElement=t)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"ctx",{get:function(){return this._ctx},set:function(t){this._ctx!=t&&(this._ctx=t)},enumerable:!0,configurable:!0}),t}(),r=function(){function t(t,n){this.x=t,this.y=n}return t.prototype.distanceFrom=function(t){var n=this.x-t.x,i=this.y-t.y;return Math.sqrt(n*n+i*i)},t}();function s(t,n){return Math.random()*(n-t)+t}var a=function(){function t(t,n,i){this.position=t,this.height=n,this.width=i}return t.getInstance=function(){return t._instance||(t._instance=new t(new r(0,0),0,0)),t._instance},t}(),h=function(){function t(){this.radius=1,this.reset()}return t.prototype.step=function(){this.hit=!1,this.path.unshift([this.position.x,this.position.y]),this.path.length>e.rainPath&&this.path.pop(),this.velocity.y+=e.gravity,this.position.x+=this.velocity.x,this.position.y+=this.velocity.y,this.isOutOfBounds()&&this.reset(),this.checkCharacterHit()},t.prototype.draw=function(){var t=o.getInstance().ctx;t.beginPath(),t.moveTo(this.position.x,~~this.position.y);for(var n=0,i=this.path.length;n<i;n++){var e=this.path[n];t.lineTo(e[0],~~e[1])}t.strokeStyle="hsla( 97, 2%, 60%, 1)",t.stroke()},t.prototype.isOutOfBounds=function(){return this.position.y>e.windowHeight+10},t.prototype.checkCharacterHit=function(){var t=a.getInstance();this.position.distanceFrom(t.position)<this.radius+t.width&&(this.velocity.x=-(t.position.x-this.position.x)*s(.01,.03),this.velocity.y=-(t.position.y-this.position.y)*s(.01,.03),this.hit=!0)},t.prototype.reset=function(){this.path=[],this.path.length=0;var t=s(0,e.windowWidth);this.position=new r(t,0),this.velocity=new r(0,0),this.hit=!1},t}();function c(){requestAnimationFrame(c),function(){var t=e.rain;t.length<e.rainCount&&t.push(new h);var n=t.length;console.log(n);for(;n--;)t[n].step()}(),function(){var t=o.getInstance().ctx;t.fillStyle="hsla(255, 2%, 40%, 0.4)",t.fillRect(0,0,e.windowWidth,e.windowHeight),t.globalCompositeOperation="lighter";var n=e.rain,i=n.length;for(;i--;)n[i].draw();t.globalCompositeOperation="source-over",t.fillStyle="rgb(211, 211, 211)"}()}window.onload=function(){document.body.appendChild((new o).canvasElement),c()}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,